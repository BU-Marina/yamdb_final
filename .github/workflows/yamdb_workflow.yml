name: yamdb workflow

on:
  push:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
  
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        pytest
#   # Собрать и отправить образ приложения на DockerHub
#   build:
#     runs-on: ubuntu-latest
#     needs: tests # Не выполнять сразу, ждать, пока выполнится tests
#     steps:
#     - ...
#   # Деплой приложения на удалённый сервер
#   deploy:
#     runs-on: ubuntu-latest
#     needs: build # Не выполнять сразу, ждать, пока выполнится build
#     steps:
#     - ...

# # .github/workflows/main.yml

# # Тут ваши задачи тестирования и сборки образа
# # ...
# # Сразу после них добавьте новую задачу: деплой приложения
# build_and_push_to_docker_hub:
#     name: Push Docker image to Docker Hub
#     runs-on: ubuntu-latest
#     needs: tests
#     steps:
#       - name: Check out the repo
#         # Проверка доступности репозитория Docker Hub для workflow
#         uses: actions/checkout@v2 
#       - name: Set up Docker Buildx
#         # Вызов сборщика контейнеров docker
#         uses: docker/setup-buildx-action@v1 
#       - name: Login to Docker 
#         # Запуск скрипта авторизации на Docker Hub
#         uses: docker/login-action@v1 
#         with:
#           username: <ваш_username_dockerhub> 
#           password: <ваш_пароль_dockerhub>
#       - name: Push to Docker Hub
#         # Пуш образа в Docker Hub 
#         uses: docker/build-push-action@v2 
#         with:
#           push: true
#           tags: ваш-логин-на-docker-hub/ваш-репозиторий-на-docker-hub:latest

# deploy:
#     runs-on: ubuntu-latest
#     needs: build_and_push_to_docker_hub
#     steps:
#     - name: executing remote ssh commands to deploy
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.HOST }}
#         username: ${{ secrets.USER }}
#         key: ${{ secrets.SSH_KEY }}
#         passphrase: ${{ secrets.PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
#         script: |
#           # Выполняет pull образа с DockerHub
#           sudo docker pull <имя-пользователя>/<имя-репозитория>
#           #остановка всех контейнеров
#           sudo docker stop $(sudo docker ps -a -q)
#           sudo docker run --rm -d -p 5000:5000 <имя-пользователя>/<имя-репозитория>

# deploy:
#     runs-on: ubuntu-latest
#     needs: build_and_push_to_docker_hub
#     steps:
#       - name: executing remote ssh commands to deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.PASSPHRASE }}
#           script: |
#             sudo docker-compose stop
#             sudo docker-compose rm web
#             touch .env
#             echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#             echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#             echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#             echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#             echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#             echo DB_PORT=${{ secrets.DB_PORT }} >> .env
#             sudo docker-compose up -d
